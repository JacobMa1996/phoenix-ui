{
    "project": {
        "name": "phoenix-ui",
        "description": {
            "type": "Buffer",
            "data": [
                60,
                104,
                49,
                62,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                32,
                111,
                102,
                32,
                82,
                101,
                97,
                99,
                116,
                60,
                47,
                104,
                49,
                62,
                10,
                60,
                112,
                62,
                60,
                115,
                116,
                114,
                111,
                110,
                103,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                60,
                47,
                115,
                116,
                114,
                111,
                110,
                103,
                62,
                230,
                152,
                175,
                229,
                159,
                186,
                228,
                186,
                142,
                82,
                101,
                97,
                99,
                116,
                230,
                161,
                134,
                230,
                158,
                182,
                229,
                174,
                158,
                231,
                142,
                176,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                62,
                103,
                105,
                116,
                104,
                117,
                98,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                231,
                137,
                185,
                230,
                128,
                167,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                117,
                108,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                230,
                156,
                137,
                232,
                190,
                131,
                228,
                184,
                176,
                229,
                175,
                140,
                231,
                154,
                132,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                143,
                175,
                228,
                190,
                155,
                233,
                128,
                137,
                230,
                139,
                169,
                44,
                228,
                185,
                159,
                229,
                176,
                134,
                230,
                140,
                129,
                231,
                187,
                173,
                228,
                184,
                176,
                229,
                175,
                140,
                229,
                146,
                140,
                228,
                188,
                152,
                229,
                140,
                150,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                133,
                183,
                230,
                156,
                137,
                230,
                139,
                147,
                229,
                177,
                149,
                230,
                128,
                167,
                60,
                47,
                108,
                105,
                62,
                10,
                60,
                47,
                117,
                108,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                229,
                174,
                137,
                232,
                163,
                133,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                112,
                62,
                231,
                187,
                132,
                228,
                187,
                182,
                228,
                184,
                173,
                228,
                189,
                191,
                231,
                148,
                168,
                229,
                136,
                176,
                229,
                138,
                168,
                231,
                148,
                187,
                231,
                154,
                132,
                233,
                131,
                168,
                229,
                136,
                134,
                233,
                156,
                128,
                232,
                166,
                129,
                233,
                162,
                157,
                229,
                164,
                150,
                229,
                174,
                137,
                232,
                163,
                133,
                32,
                60,
                115,
                116,
                114,
                111,
                110,
                103,
                62,
                114,
                101,
                97,
                99,
                116,
                45,
                97,
                100,
                100,
                111,
                110,
                115,
                45,
                99,
                115,
                115,
                45,
                116,
                114,
                97,
                110,
                115,
                105,
                116,
                105,
                111,
                110,
                45,
                103,
                114,
                111,
                117,
                112,
                60,
                47,
                115,
                116,
                114,
                111,
                110,
                103,
                62,
                32,
                230,
                157,
                165,
                230,
                148,
                175,
                230,
                140,
                129,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                114,
                101,
                62,
                10,
                32,
                32,
                32,
                32,
                110,
                112,
                109,
                32,
                105,
                110,
                115,
                116,
                97,
                108,
                108,
                32,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                32,
                45,
                45,
                115,
                97,
                118,
                101,
                10,
                32,
                32,
                32,
                32,
                110,
                112,
                109,
                32,
                105,
                110,
                115,
                116,
                97,
                108,
                108,
                32,
                114,
                101,
                97,
                99,
                116,
                45,
                97,
                100,
                100,
                111,
                110,
                115,
                45,
                99,
                115,
                115,
                45,
                116,
                114,
                97,
                110,
                115,
                105,
                116,
                105,
                111,
                110,
                45,
                103,
                114,
                111,
                117,
                112,
                32,
                45,
                45,
                115,
                97,
                118,
                101,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                228,
                189,
                191,
                231,
                148,
                168,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                67,
                111,
                109,
                109,
                111,
                110,
                74,
                83,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                62,
                10,
                32,
                32,
                32,
                32,
                118,
                97,
                114,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                61,
                32,
                114,
                101,
                113,
                117,
                105,
                114,
                101,
                40,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                66,
                117,
                116,
                116,
                111,
                110,
                39,
                41,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                60,
                104,
                51,
                62,
                69,
                83,
                54,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                62,
                10,
                32,
                32,
                32,
                32,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                123,
                66,
                117,
                116,
                116,
                111,
                110,
                125,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                39,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                60,
                104,
                51,
                62,
                66,
                114,
                111,
                119,
                115,
                101,
                114,
                32,
                103,
                108,
                111,
                98,
                97,
                108,
                115,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                62,
                10,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                115,
                99,
                114,
                105,
                112,
                116,
                32,
                115,
                114,
                99,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                100,
                105,
                115,
                116,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                46,
                109,
                105,
                110,
                46,
                106,
                115,
                34,
                38,
                35,
                54,
                50,
                59,
                38,
                35,
                54,
                48,
                59,
                47,
                115,
                99,
                114,
                105,
                112,
                116,
                38,
                35,
                54,
                50,
                59,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                229,
                133,
                182,
                228,
                187,
                150,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                112,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                233,
                156,
                128,
                232,
                166,
                129,
                229,
                146,
                140,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                34,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                60,
                47,
                97,
                62,
                32,
                233,
                133,
                141,
                229,
                144,
                136,
                228,
                189,
                191,
                231,
                148,
                168,
                44,
                230,
                143,
                144,
                228,
                190,
                155,
                233,
                152,
                191,
                230,
                179,
                162,
                231,
                189,
                151,
                233,
                187,
                152,
                232,
                174,
                164,
                230,
                160,
                183,
                229,
                188,
                143,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                44,
                233,
                156,
                128,
                232,
                166,
                129,
                73,
                79,
                83,
                230,
                160,
                183,
                229,
                188,
                143,
                229,
                144,
                140,
                230,
                151,
                182,
                229,
                188,
                149,
                229,
                133,
                165,
                115,
                107,
                105,
                110,
                45,
                105,
                111,
                115,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                229,
                141,
                179,
                229,
                143,
                175,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                104,
                50,
                62,
                230,
                142,
                168,
                232,
                141,
                144,
                80,
                67,
                231,
                171,
                175,
                82,
                101,
                97,
                99,
                116,
                32,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                32,
                45,
                32,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                112,
                62,
                103,
                105,
                116,
                104,
                117,
                98,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10
            ]
        },
        "version": "1.0.0",
        "url": "",
        "navs": [
            {
                "name": "主页",
                "url": ""
            }
        ]
    },
    "files": {
        "src/utils/ClassNameMixin.js": {
            "name": "src/utils/ClassNameMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/MethodMixin.js": {
            "name": "src/utils/MethodMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/PropertyMixin.js": {
            "name": "src/utils/PropertyMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/Tool.js": {
            "name": "src/utils/Tool.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/constants.js": {
            "name": "src/utils/constants.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/extend.js": {
            "name": "src/utils/extend.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/Accordion.js": {
            "name": "src/Accordion.js",
            "modules": {},
            "classes": {
                "Accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Animate.js": {
            "name": "src/Animate.js",
            "modules": {},
            "classes": {
                "Animate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Badge.js": {
            "name": "src/Badge.js",
            "modules": {},
            "classes": {
                "Badge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Button.js": {
            "name": "src/Button.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ButtonGroup.js": {
            "name": "src/ButtonGroup.js",
            "modules": {},
            "classes": {
                "ButtonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Col.js": {
            "name": "src/Col.js",
            "modules": {},
            "classes": {
                "Col": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Dialog.js": {
            "name": "src/Dialog.js",
            "modules": {},
            "classes": {
                "Dialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Drag.js": {
            "name": "src/Drag.js",
            "modules": {
                "辅助组件": 1
            },
            "classes": {
                "Drag": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/FormGroup.js": {
            "name": "src/FormGroup.js",
            "modules": {},
            "classes": {
                "FormGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Grid.js": {
            "name": "src/Grid.js",
            "modules": {
                "布局组件": 1
            },
            "classes": {
                "Grid": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Input.js": {
            "name": "src/Input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Label.js": {
            "name": "src/Label.js",
            "modules": {
                "标签组件": 1
            },
            "classes": {
                "Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Popover.js": {
            "name": "src/Popover.js",
            "modules": {},
            "classes": {
                "Popover": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Popup.js": {
            "name": "src/Popup.js",
            "modules": {},
            "classes": {
                "Popup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Row.js": {
            "name": "src/Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Slider.js": {
            "name": "src/Slider.js",
            "modules": {},
            "classes": {
                "Slider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Star.js": {
            "name": "src/Star.js",
            "modules": {
                "基础组件": 1
            },
            "classes": {
                "Star": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Swipe.js": {
            "name": "src/Swipe.js",
            "modules": {},
            "classes": {
                "Swipe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Switch.js": {
            "name": "src/Switch.js",
            "modules": {},
            "classes": {
                "Switch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tab.js": {
            "name": "src/Tab.js",
            "modules": {},
            "classes": {
                "Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/TableView.js": {
            "name": "src/TableView.js",
            "modules": {},
            "classes": {
                "TableView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tabset.js": {
            "name": "src/Tabset.js",
            "modules": {
                "选项卡": 1
            },
            "classes": {
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Textarea.js": {
            "name": "src/Textarea.js",
            "modules": {
                "表单组件": 1
            },
            "classes": {
                "TextArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Toast.js": {
            "name": "src/Toast.js",
            "modules": {
                "操作类组件": 1
            },
            "classes": {
                "Toast": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Whisper.js": {
            "name": "src/Whisper.js",
            "modules": {
                "提示组件": 1
            },
            "classes": {
                "Whisper": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "操作类组件": {
            "name": "操作类组件",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "Dialog": 1,
                "Popup": 1,
                "Slider": 1,
                "Swipe": 1,
                "Toast": 1,
                "Accordion": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/Toast.js",
            "line": 7,
            "description": "飘字"
        },
        "辅助组件": {
            "name": "辅助组件",
            "submodules": {},
            "classes": {
                "Drag": 1,
                "Animate": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/Drag.js",
            "line": 6,
            "description": "拖动Drag"
        },
        "标签组件": {
            "name": "标签组件",
            "submodules": {},
            "classes": {
                "Badge": 1,
                "Label": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Label.js",
            "line": 14,
            "description": "<h5>label模块，主要包括一下两个组件:</h5>\n<strong><a href='../classes/Label.html'>label 标签</a></strong><br/>\n<strong><a href='../classes/Badge.html'>bridge 徽章</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "基础组件": {
            "name": "基础组件",
            "submodules": {},
            "classes": {
                "Star": 1,
                "Button": 1,
                "ButtonGroup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/Star.js",
            "line": 5,
            "description": "星级评价(Star)组件<br />\n提供的UI展示属性接口包括<br/>\n<ul>\n    <li>rate：星级评价的分数(满分为50)<code>默认为0</code></li>\n    <li>size：星星的大小(可选md、lg、默认3种size)<code></code></li>\n</ul><br>\n使用方式:\n<pre><code>&#60;Star rate={50} size={10}/&#62;</code>\n</pre>"
        },
        "布局组件": {
            "name": "布局组件",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "Row": 1,
                "TableView": 1,
                "Col": 1,
                "Grid": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/TableView.js",
            "line": 6,
            "description": "<h5>主要栅格化布局组件</h5>\n<pre><code>\n    &#60;Grid&#62;//定义栅格\n        &#60;Col sm={6}&#62;//定义一列，总长度为12份\n            &#60;Row&#62; &#60;/Row&#62;//定义一行\n        &#60;/Col&#62;\n    &#60;/Grid&#62;\n</code></pre>\n\n<strong><a href='../classes/Grid.html'>Grid定义外框</a></strong><br>\n<strong><a href='../classes/Row.html'>Row定义行排列</a></strong><br>\n<strong><a href='../classes/Col.html'>Col定义竖排列</a></strong><br>\n<h6>点击以上链接进行相关查看</h6>",
            "itemtype": "main"
        },
        "表单组件": {
            "name": "表单组件",
            "submodules": {},
            "classes": {
                "Input": 1,
                "Switch": 1,
                "TextArea": 1,
                "FormGroup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/Textarea.js",
            "line": 6,
            "description": "表单元素textarea"
        },
        "提示组件": {
            "name": "提示组件",
            "submodules": {},
            "classes": {
                "Popover": 1,
                "Whisper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Whisper.js",
            "line": 17,
            "description": "<h5>提示模块，主要包括一下两个组件:</h5>\n<strong><a href='../classes/Whisper.html'>Whisper</a></strong><br/>\n<strong><a href='../classes/Popover.html'>Popover</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "选项卡": {
            "name": "选项卡",
            "submodules": {},
            "classes": {
                "Tab": 1,
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Tabset.js",
            "line": 17,
            "description": "<h5>tab选项卡，主要包括一下两个组件:</h5>\n<strong><a href='../classes/Tabset.html'>tabset</a></strong><br/>\n<strong><a href='../classes/Tab.html'>tab</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        }
    },
    "classes": {
        "Accordion": {
            "name": "Accordion",
            "shortname": "Accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "file": "src/Accordion.js",
            "line": 6,
            "description": "手风琴",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport classnames from 'classnames';\n\timport {Row, Col, Accordion} from '../../src/index';\n\t\n\texport default class accordion extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false\n\t        } \n\t    }\n\t\n\t    onChange(){\n\t        this.setState({\n\t          visible: !this.state.visible,\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Accordion</h2>\n\t                <h3 className=\"comp-type\">手风琴</h3>\n\t                <Accordion visible={this.state.visible} onChange={::this.onChange}>\n\t                    <Accordion.Header>\n\t                        标题一<span className={classnames(\"ph-iconfont icon-chevron-more\", this.state.visible?'active':'')} style={{float:'right'}}></span>\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <ul className=\"ph-accordion-list\">\n\t                            <li className=\"ph-accordion-item\">内容一</li>\n\t                            <li className=\"ph-accordion-item\">内容二</li>\n\t                            <li className=\"ph-accordion-item\">内容三</li>\n\t                        </ul>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport classnames from 'classnames';\n\timport {Row, Col, Accordion} from '../../src/index';\n\t\n\texport default class accordion extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false\n\t        } \n\t    }\n\t\n\t    onChange(){\n\t        this.setState({\n\t          visible: !this.state.visible,\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Accordion</h2>\n\t                <h3 className=\"comp-type\">手风琴</h3>\n\t                <Accordion visible={this.state.visible} onChange={::this.onChange}>\n\t                    <Accordion.Header>\n\t                        标题一<span className={classnames(\"ph-iconfont icon-chevron-more\", this.state.visible?'active':'')} style={{float:'right'}}></span>\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <ul className=\"ph-accordion-list\">\n\t                            <li className=\"ph-accordion-item\">内容一</li>\n\t                            <li className=\"ph-accordion-item\">内容二</li>\n\t                            <li className=\"ph-accordion-item\">内容三</li>\n\t                        </ul>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Animate": {
            "name": "Animate",
            "shortname": "Animate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "辅助组件",
            "namespace": "",
            "file": "src/Animate.js",
            "line": 5,
            "description": "动画外层",
            "extends": "Component",
            "is_constructor": 1,
            "show": true
        },
        "Badge": {
            "name": "Badge",
            "shortname": "Badge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/Badge.js",
            "line": 4,
            "description": "Badge徽章标记，主要是用来提供不同颜色的标识<br/>\n可以通过phStyle来改变颜色<br/>\n因为发生回调的概率不大所以没有提供回调函数<br/>\n但支持自定义类名，事件等操作<br/>\n具体属性和接口如下：\n<ul>\n    <li>phStyle:badge徽章颜色,可取值[primary、warning、danger、info、error、success]等，默认primary</li>\n    <li>\n        <code>\n           Badge  phStyle=\"success\"\n           惠2\n           /Badge\n        </code>\n    </li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Badge} from '../../src/index';\n\t\n\texport default class Badges extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Badge</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle</h3>\n\t                <div className=\"content\">\n\t\t                <Badge>惠1</Badge>\n\t\t                <Badge phStyle=\"success\">惠2</Badge>\n\t\t                <Badge phStyle='info'>惠3</Badge>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Badge} from '../../src/index';\n\t\n\texport default class Badges extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Badge</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle</h3>\n\t                <div className=\"content\">\n\t\t                <Badge>惠1</Badge>\n\t\t                <Badge phStyle=\"success\">惠2</Badge>\n\t\t                <Badge phStyle='info'>惠3</Badge>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/Button.js",
            "line": 5,
            "description": "- 按钮组件提供所有properties中内置的颜色及字体大小样式供选择<br/>\n- 也可以自定义行内样式和className名字定义UI展示<br/>\n- 支持disabled, active属性定义<br/>\n- 可以通过phSize 设置大小，可选xs、sm、lg。<br/>\n- 通过phStyle选择按钮颜色，可选error、warning、danger、link、gray、white、success\n主要属性和接口：\n <ul>\n   <li>phSize:按钮颜色<br>\n       如：<code>\n          Button radius phSize=\"sm\" phStyle=\"warning\"\n       </code>\n   </li>\n   <li>egStyle:按钮的大小。分别为sm、md、lg，默认sm<br>\n       如：<code>\n          Button radius phSize=\"md\" phStyle=\"warning\"\n       </code>\n   </li>\n   <li>block:是否块级显示，默认false<br>\n       如：<code>\n          Button block\n       </code>\n   </li>\n </ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Button</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle</h3>\n\t                <div className=\"content\">\n\t                    <Button phStyle=\"primary\">Primary</Button>\n\t                    <Button radius phStyle=\"info\">Info</Button>\n\t                    <Button phStyle=\"success\">Success</Button>\n\t                    <Button phStyle=\"error\">Error</Button>\n\t                    <Button phStyle=\"danger\">Danger</Button>\n\t                    <Button phStyle=\"warning\">Warning</Button>\n\t                    <Button phStyle=\"gray\">Gray</Button>\n\t                    <Button phStyle=\"link\">Link</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">hollow</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow phStyle=\"primary\">Primary</Button>\n\t                    <Button hollow phStyle=\"info\">Info</Button>\n\t                    <Button hollow phStyle=\"success\">Success</Button>\n\t                    <Button hollow phStyle=\"error\">Error</Button>\n\t                    <Button hollow phStyle=\"danger\">Danger</Button>\n\t                    <Button hollow phStyle=\"warning\">Warning</Button>\n\t                    <Button hollow phStyle=\"gray\">Gray</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 phSize</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"xs\" phStyle=\"primary\">xs</Button>\n\t                    <Button phSize=\"md\" phStyle=\"primary\">md</Button>\n\t                    <Button phSize=\"lg\" phStyle=\"primary\">lg</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">disabled/active</h3>\n\t                <div className=\"content\">\n\t                    <Button disabled phStyle=\"primary\">disabled</Button>\n\t                    <Button active phStyle=\"primary\">active</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">block</h3>\n\t                <div className=\"content\">\n\t                    <Button block phStyle=\"success\">确定</Button>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}\n\t",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Button</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle</h3>\n\t                <div className=\"content\">\n\t                    <Button phStyle=\"primary\">Primary</Button>\n\t                    <Button radius phStyle=\"info\">Info</Button>\n\t                    <Button phStyle=\"success\">Success</Button>\n\t                    <Button phStyle=\"error\">Error</Button>\n\t                    <Button phStyle=\"danger\">Danger</Button>\n\t                    <Button phStyle=\"warning\">Warning</Button>\n\t                    <Button phStyle=\"gray\">Gray</Button>\n\t                    <Button phStyle=\"link\">Link</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">hollow</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow phStyle=\"primary\">Primary</Button>\n\t                    <Button hollow phStyle=\"info\">Info</Button>\n\t                    <Button hollow phStyle=\"success\">Success</Button>\n\t                    <Button hollow phStyle=\"error\">Error</Button>\n\t                    <Button hollow phStyle=\"danger\">Danger</Button>\n\t                    <Button hollow phStyle=\"warning\">Warning</Button>\n\t                    <Button hollow phStyle=\"gray\">Gray</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 phSize</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"xs\" phStyle=\"primary\">xs</Button>\n\t                    <Button phSize=\"md\" phStyle=\"primary\">md</Button>\n\t                    <Button phSize=\"lg\" phStyle=\"primary\">lg</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">disabled/active</h3>\n\t                <div className=\"content\">\n\t                    <Button disabled phStyle=\"primary\">disabled</Button>\n\t                    <Button active phStyle=\"primary\">active</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">block</h3>\n\t                <div className=\"content\">\n\t                    <Button block phStyle=\"success\">确定</Button>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/ButtonGroup.js",
            "line": 8,
            "description": "按钮组组件配合Button组件,提供了横、竖两种排列方式<br/>\n 主要属性和接口：\n<ul>\n    <li>phType:是否自适应宽度或者垂直排列，可选'justify,tacked'默认'justify'\n    </li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.4",
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Button</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle</h3>\n\t                <div className=\"content\">\n\t                    <Button phStyle=\"primary\">Primary</Button>\n\t                    <Button radius phStyle=\"info\">Info</Button>\n\t                    <Button phStyle=\"success\">Success</Button>\n\t                    <Button phStyle=\"error\">Error</Button>\n\t                    <Button phStyle=\"danger\">Danger</Button>\n\t                    <Button phStyle=\"warning\">Warning</Button>\n\t                    <Button phStyle=\"gray\">Gray</Button>\n\t                    <Button phStyle=\"link\">Link</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">hollow</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow phStyle=\"primary\">Primary</Button>\n\t                    <Button hollow phStyle=\"info\">Info</Button>\n\t                    <Button hollow phStyle=\"success\">Success</Button>\n\t                    <Button hollow phStyle=\"error\">Error</Button>\n\t                    <Button hollow phStyle=\"danger\">Danger</Button>\n\t                    <Button hollow phStyle=\"warning\">Warning</Button>\n\t                    <Button hollow phStyle=\"gray\">Gray</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 phSize</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"xs\" phStyle=\"primary\">xs</Button>\n\t                    <Button phSize=\"md\" phStyle=\"primary\">md</Button>\n\t                    <Button phSize=\"lg\" phStyle=\"primary\">lg</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">disabled/active</h3>\n\t                <div className=\"content\">\n\t                    <Button disabled phStyle=\"primary\">disabled</Button>\n\t                    <Button active phStyle=\"primary\">active</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">block</h3>\n\t                <div className=\"content\">\n\t                    <Button block phStyle=\"success\">确定</Button>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}\n\t",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Button</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle</h3>\n\t                <div className=\"content\">\n\t                    <Button phStyle=\"primary\">Primary</Button>\n\t                    <Button radius phStyle=\"info\">Info</Button>\n\t                    <Button phStyle=\"success\">Success</Button>\n\t                    <Button phStyle=\"error\">Error</Button>\n\t                    <Button phStyle=\"danger\">Danger</Button>\n\t                    <Button phStyle=\"warning\">Warning</Button>\n\t                    <Button phStyle=\"gray\">Gray</Button>\n\t                    <Button phStyle=\"link\">Link</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">hollow</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow phStyle=\"primary\">Primary</Button>\n\t                    <Button hollow phStyle=\"info\">Info</Button>\n\t                    <Button hollow phStyle=\"success\">Success</Button>\n\t                    <Button hollow phStyle=\"error\">Error</Button>\n\t                    <Button hollow phStyle=\"danger\">Danger</Button>\n\t                    <Button hollow phStyle=\"warning\">Warning</Button>\n\t                    <Button hollow phStyle=\"gray\">Gray</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 phSize</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"xs\" phStyle=\"primary\">xs</Button>\n\t                    <Button phSize=\"md\" phStyle=\"primary\">md</Button>\n\t                    <Button phSize=\"lg\" phStyle=\"primary\">lg</Button>\n\t                </div>\n\t                <h3 className=\"comp-type\">disabled/active</h3>\n\t                <div className=\"content\">\n\t                    <Button disabled phStyle=\"primary\">disabled</Button>\n\t                    <Button active phStyle=\"primary\">active</Button>\n\t                </div>\n\t                <h3 className=\"comp-tip\">block</h3>\n\t                <div className=\"content\">\n\t                    <Button block phStyle=\"success\">确定</Button>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Col": {
            "name": "Col",
            "shortname": "Col",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/Col.js",
            "line": 5,
            "description": "列",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM from 'react-dom';\n\t\n\timport {Grid,Row,Col} from '../../src/index';\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\">容器属性 align-items(default:stretch)</h3>\n\t                <h3 className=\"comp-tip\">stretch</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"stretch\">\n\t                        <Col>\n\t                            <div className='col-demo'>stretch</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />stretch<br />stretch<br />stretch</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">baseline</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"baseline\">\n\t                        <Col>\n\t                            <div className='col-demo'>baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline<br />baseline<br />baseline</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"top\">\n\t                        <Col>\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top<br />top<br />top</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"bottom\">\n\t                        <Col>\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom<br />bottom<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">center</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"center\">\n\t                        <Col>\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center<br />center<br />center</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 align-self(default:auto)</h3>\n\t                <h3 className=\"comp-tip\">auto</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col>\n\t                            <div className='col-demo'>auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto auto auto</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col align=\"top\">\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col align=\"center\">\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col align=\"bottom\">\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col >\n\t                            <div className='col-demo'>top<br />center<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 flex</h3>\n\t                <h3 className=\"comp-tip\">width</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col width=\"15\">\n\t                            <div className='col-demo'>15</div>\n\t                        </Col>\n\t                        <Col width=\"20\">\n\t                            <div className='col-demo'>20</div>\n\t                        </Col>\n\t                        <Col width=\"25\">\n\t                            <div className='col-demo'>25</div>\n\t                        </Col>\n\t                        <Col width=\"40\">\n\t                            <div className='col-demo'>40<br />40<br />40</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">offset (margin-left)</h3>\n\t                <Row>\n\t                    <Col width=\"20\" offset=\"10\">\n\t                        <div className='col-demo'>10</div>\n\t                    </Col>\n\t                    <Col width=\"40\" offset=\"10\" >\n\t                        <div className='col-demo'>10<br />10<br />10</div>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t",
                "\t\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM from 'react-dom';\n\t\n\timport {Grid,Row,Col} from '../../src/index';\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\">容器属性 align-items(default:stretch)</h3>\n\t                <h3 className=\"comp-tip\">stretch</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"stretch\">\n\t                        <Col>\n\t                            <div className='col-demo'>stretch</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />stretch<br />stretch<br />stretch</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">baseline</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"baseline\">\n\t                        <Col>\n\t                            <div className='col-demo'>baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline<br />baseline<br />baseline</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"top\">\n\t                        <Col>\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top<br />top<br />top</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"bottom\">\n\t                        <Col>\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom<br />bottom<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">center</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"center\">\n\t                        <Col>\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center<br />center<br />center</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 align-self(default:auto)</h3>\n\t                <h3 className=\"comp-tip\">auto</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col>\n\t                            <div className='col-demo'>auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto auto auto</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col align=\"top\">\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col align=\"center\">\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col align=\"bottom\">\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col >\n\t                            <div className='col-demo'>top<br />center<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 flex</h3>\n\t                <h3 className=\"comp-tip\">width</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col width=\"15\">\n\t                            <div className='col-demo'>15</div>\n\t                        </Col>\n\t                        <Col width=\"20\">\n\t                            <div className='col-demo'>20</div>\n\t                        </Col>\n\t                        <Col width=\"25\">\n\t                            <div className='col-demo'>25</div>\n\t                        </Col>\n\t                        <Col width=\"40\">\n\t                            <div className='col-demo'>40<br />40<br />40</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">offset (margin-left)</h3>\n\t                <Row>\n\t                    <Col width=\"20\" offset=\"10\">\n\t                        <div className='col-demo'>10</div>\n\t                    </Col>\n\t                    <Col width=\"40\" offset=\"10\" >\n\t                        <div className='col-demo'>10<br />10<br />10</div>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "since": "0.1.0"
        },
        "Dialog": {
            "name": "Dialog",
            "shortname": "Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Dialog.js",
            "line": 7,
            "description": "弹框",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button, Dialog} from '../../src/index';\n\t\n\texport default class dialog extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible: false\n\t        }\n\t    }\n\t\n\t    onShow(){\n\t        this.setState({\n\t          visible: true,\n\t        });\n\t    }\n\t\n\t    onClose(){\n\t        this.setState({\n\t          visible: false,\n\t        });\n\t    }\n\t\n\t    onConfirm(){\n\t        this.onClose();\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Dialog</h2>\n\t                <h3 className=\"comp-type\">自定义弹框</h3>\n\t                <Button block radius phSize=\"lg\" phStyle=\"primary\" onClick={::this.onShow}>点击弹框</Button>\n\t                <Dialog visible={this.state.visible}>\n\t                    <Dialog.Title>标题标题</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer>                        \n\t                        <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={::this.onClose}>取消</Button>\n\t                        <Button hollow phSize=\"lg\" phStyle=\"primary\" onClick={::this.onConfirm}>确定</Button>\n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button, Dialog} from '../../src/index';\n\t\n\texport default class dialog extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible: false\n\t        }\n\t    }\n\t\n\t    onShow(){\n\t        this.setState({\n\t          visible: true,\n\t        });\n\t    }\n\t\n\t    onClose(){\n\t        this.setState({\n\t          visible: false,\n\t        });\n\t    }\n\t\n\t    onConfirm(){\n\t        this.onClose();\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Dialog</h2>\n\t                <h3 className=\"comp-type\">自定义弹框</h3>\n\t                <Button block radius phSize=\"lg\" phStyle=\"primary\" onClick={::this.onShow}>点击弹框</Button>\n\t                <Dialog visible={this.state.visible}>\n\t                    <Dialog.Title>标题标题</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer>                        \n\t                        <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={::this.onClose}>取消</Button>\n\t                        <Button hollow phSize=\"lg\" phStyle=\"primary\" onClick={::this.onConfirm}>确定</Button>\n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Drag": {
            "name": "Drag",
            "shortname": "Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "辅助组件",
            "namespace": "",
            "file": "src/Drag.js",
            "line": 6,
            "description": "拖动Drag",
            "extends": "Component",
            "is_constructor": 1,
            "show": true
        },
        "FormGroup": {
            "name": "FormGroup",
            "shortname": "FormGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/FormGroup.js",
            "line": 9,
            "description": "表单元素布局方式，整齐的排列一组表单元素",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {FormGroup,Row,Col,Input} from '../../src/index';\n\t\n\texport default class formgroup extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:''\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">FormGroup</h2>\n\t                <FormGroup>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"姓名\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"用户名\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"身份证\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>地址</label>\n\t                            <Input type=\"text\" placeholder=\"地址\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>省</label>\n\t                            <Input type=\"text\" placeholder=\"省\" />\n\t                        </Col>\n\t                        <Col>\n\t                            <label>市</label>\n\t                            <Input type=\"text\" placeholder=\"市\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row className='a'>\n\t                        <Col className='test'>\n\t                            <label>兴趣爱好</label>\n\t                            <Input type=\"checkbox\" label=\"篮球\" className='a1'/>\n\t                            <Input type=\"checkbox\" label=\"足球\" />\n\t                            <Input type=\"checkbox\" label=\"乒乓球\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row className='test'>\n\t                        <Col>\n\t                            <a href=\"###\" className=\"navigate-right\">\n\t                                <label><span className=\"color-error\">*</span>性别</label>\n\t                                <input type=\"text\" placeholder=\"男/女\" disabled/>\n\t                            </a>\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>喜欢的水果</label>\n\t                            <div className=\"input\" style={{textAlign: 'right'}}>\n\t                                <Input type=\"checkbox\" label=\"苹果\" />\n\t                                <Input type=\"checkbox\" label=\"香蕉\" />\n\t                            </div>\n\t                        </Col>\n\t                    </Row>\n\t                </FormGroup>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {FormGroup,Row,Col,Input} from '../../src/index';\n\t\n\texport default class formgroup extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:''\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">FormGroup</h2>\n\t                <FormGroup>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"姓名\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"用户名\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"身份证\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>地址</label>\n\t                            <Input type=\"text\" placeholder=\"地址\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>省</label>\n\t                            <Input type=\"text\" placeholder=\"省\" />\n\t                        </Col>\n\t                        <Col>\n\t                            <label>市</label>\n\t                            <Input type=\"text\" placeholder=\"市\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row className='a'>\n\t                        <Col className='test'>\n\t                            <label>兴趣爱好</label>\n\t                            <Input type=\"checkbox\" label=\"篮球\" className='a1'/>\n\t                            <Input type=\"checkbox\" label=\"足球\" />\n\t                            <Input type=\"checkbox\" label=\"乒乓球\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row className='test'>\n\t                        <Col>\n\t                            <a href=\"###\" className=\"navigate-right\">\n\t                                <label><span className=\"color-error\">*</span>性别</label>\n\t                                <input type=\"text\" placeholder=\"男/女\" disabled/>\n\t                            </a>\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>喜欢的水果</label>\n\t                            <div className=\"input\" style={{textAlign: 'right'}}>\n\t                                <Input type=\"checkbox\" label=\"苹果\" />\n\t                                <Input type=\"checkbox\" label=\"香蕉\" />\n\t                            </div>\n\t                        </Col>\n\t                    </Row>\n\t                </FormGroup>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/Grid.js",
            "line": 26,
            "description": "定义栅格容器,配合Col和Row使用",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM from 'react-dom';\n\t\n\timport {Grid,Row,Col} from '../../src/index';\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\">容器属性 align-items(default:stretch)</h3>\n\t                <h3 className=\"comp-tip\">stretch</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"stretch\">\n\t                        <Col>\n\t                            <div className='col-demo'>stretch</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />stretch<br />stretch<br />stretch</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">baseline</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"baseline\">\n\t                        <Col>\n\t                            <div className='col-demo'>baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline<br />baseline<br />baseline</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"top\">\n\t                        <Col>\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top<br />top<br />top</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"bottom\">\n\t                        <Col>\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom<br />bottom<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">center</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"center\">\n\t                        <Col>\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center<br />center<br />center</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 align-self(default:auto)</h3>\n\t                <h3 className=\"comp-tip\">auto</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col>\n\t                            <div className='col-demo'>auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto auto auto</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col align=\"top\">\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col align=\"center\">\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col align=\"bottom\">\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col >\n\t                            <div className='col-demo'>top<br />center<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 flex</h3>\n\t                <h3 className=\"comp-tip\">width</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col width=\"15\">\n\t                            <div className='col-demo'>15</div>\n\t                        </Col>\n\t                        <Col width=\"20\">\n\t                            <div className='col-demo'>20</div>\n\t                        </Col>\n\t                        <Col width=\"25\">\n\t                            <div className='col-demo'>25</div>\n\t                        </Col>\n\t                        <Col width=\"40\">\n\t                            <div className='col-demo'>40<br />40<br />40</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">offset (margin-left)</h3>\n\t                <Row>\n\t                    <Col width=\"20\" offset=\"10\">\n\t                        <div className='col-demo'>10</div>\n\t                    </Col>\n\t                    <Col width=\"40\" offset=\"10\" >\n\t                        <div className='col-demo'>10<br />10<br />10</div>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t",
                "\t\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM from 'react-dom';\n\t\n\timport {Grid,Row,Col} from '../../src/index';\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\">容器属性 align-items(default:stretch)</h3>\n\t                <h3 className=\"comp-tip\">stretch</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"stretch\">\n\t                        <Col>\n\t                            <div className='col-demo'>stretch</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />stretch<br />stretch<br />stretch</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">baseline</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"baseline\">\n\t                        <Col>\n\t                            <div className='col-demo'>baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline<br />baseline<br />baseline</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"top\">\n\t                        <Col>\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top<br />top<br />top</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"bottom\">\n\t                        <Col>\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom<br />bottom<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">center</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"center\">\n\t                        <Col>\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center<br />center<br />center</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 align-self(default:auto)</h3>\n\t                <h3 className=\"comp-tip\">auto</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col>\n\t                            <div className='col-demo'>auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto auto auto</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col align=\"top\">\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col align=\"center\">\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col align=\"bottom\">\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col >\n\t                            <div className='col-demo'>top<br />center<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 flex</h3>\n\t                <h3 className=\"comp-tip\">width</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col width=\"15\">\n\t                            <div className='col-demo'>15</div>\n\t                        </Col>\n\t                        <Col width=\"20\">\n\t                            <div className='col-demo'>20</div>\n\t                        </Col>\n\t                        <Col width=\"25\">\n\t                            <div className='col-demo'>25</div>\n\t                        </Col>\n\t                        <Col width=\"40\">\n\t                            <div className='col-demo'>40<br />40<br />40</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">offset (margin-left)</h3>\n\t                <Row>\n\t                    <Col width=\"20\" offset=\"10\">\n\t                        <div className='col-demo'>10</div>\n\t                    </Col>\n\t                    <Col width=\"40\" offset=\"10\" >\n\t                        <div className='col-demo'>10<br />10<br />10</div>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/Input.js",
            "line": 6,
            "description": "表单元素，input框，使用方式跟原生一致",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Input,Row,Col} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:''\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Input</h2>\n\t                <h3 className=\"comp-type\">Text</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"text\" value={this.state.name} onChange={::this.setValue.bind(this,'name')} placeholder=\"请输入\" />\n\t                </div>\n\t                <h3 className=\"comp-type\">Radio</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"radio\" label=\"男\" name=\"sex\" />\n\t                    <Input type=\"radio\" label=\"女\" name=\"sex\" />\n\t                </div>\n\t                <h3 className=\"comp-type\">Checkbox</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"checkbox\" label=\"苹果\" defaultChecked={true}/>\n\t                    <Input type=\"checkbox\" label=\"香蕉\" />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Input,Row,Col} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:''\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Input</h2>\n\t                <h3 className=\"comp-type\">Text</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"text\" value={this.state.name} onChange={::this.setValue.bind(this,'name')} placeholder=\"请输入\" />\n\t                </div>\n\t                <h3 className=\"comp-type\">Radio</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"radio\" label=\"男\" name=\"sex\" />\n\t                    <Input type=\"radio\" label=\"女\" name=\"sex\" />\n\t                </div>\n\t                <h3 className=\"comp-type\">Checkbox</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"checkbox\" label=\"苹果\" defaultChecked={true}/>\n\t                    <Input type=\"checkbox\" label=\"香蕉\" />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/Label.js",
            "line": 14,
            "description": "Label标记，主要是用来提供不同颜色的标识<br/>\n可以通过phStyle来改变颜色,phSize改变大小<br/>\n因为发生回调的概率不大所以没有提供回调函数<br/>\n但支持自定义类名，事件等操作<br/>\n具体属性和接口如下：\n<ul>\n    <li>phStyle:label徽章颜色,可取值[primary、warning、danger、info、error、success]等，默认primary</li>\n    <li>\n        <code>\n            Label phSize=\"lg\" phStyle=\"success\"\n            惠\n           /Label\n        </code>\n    </li>\n    <li>phSize:badge徽章颜色,可取值[lg、md、'']，默认即为‘’</li>\n    <li>\n        <code>\n           Label phSize=\"lg\" phStyle=\"success\"\n            惠\n           /Label\n        </code>\n    </li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Label} from '../../src/index';\n\t\n\texport default class Labels extends Component{\n\t    render(){\n\t        return(\n\t        \t<div>\n\t            \t<h2 className=\"comp-title\">Label</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle(default:primary)</h3>\n\t                <div className=\"content\">\n\t\t                <Label>惠</Label>\n\t\t                <Label phStyle=\"success\">惠</Label>\n\t\t                <Label phStyle=\"info\">惠</Label>\n\t\t\t\t\t\t<Label phStyle=\"danger\">惠</Label>\n\t\t                <Label phStyle=\"error\">惠</Label>\n\t\t                <Label phStyle=\"warning\">惠</Label>\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 phSize(default:xs)</h3>\n\t                <div className=\"content\">\n\t\t                <Label>惠</Label>\n\t\t                <Label phSize=\"md\">惠</Label>\n\t\t                <Label phSize=\"lg\">惠</Label>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Label} from '../../src/index';\n\t\n\texport default class Labels extends Component{\n\t    render(){\n\t        return(\n\t        \t<div>\n\t            \t<h2 className=\"comp-title\">Label</h2>\n\t                <h3 className=\"comp-type\">类型 phStyle(default:primary)</h3>\n\t                <div className=\"content\">\n\t\t                <Label>惠</Label>\n\t\t                <Label phStyle=\"success\">惠</Label>\n\t\t                <Label phStyle=\"info\">惠</Label>\n\t\t\t\t\t\t<Label phStyle=\"danger\">惠</Label>\n\t\t                <Label phStyle=\"error\">惠</Label>\n\t\t                <Label phStyle=\"warning\">惠</Label>\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 phSize(default:xs)</h3>\n\t                <div className=\"content\">\n\t\t                <Label>惠</Label>\n\t\t                <Label phSize=\"md\">惠</Label>\n\t\t                <Label phSize=\"lg\">惠</Label>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Popover": {
            "name": "Popover",
            "shortname": "Popover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "提示组件",
            "namespace": "",
            "file": "src/Popover.js",
            "line": 6,
            "description": "气泡",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Whisper, Popover} from '../../src/index';\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onChange(){\n\t        console.log('气泡出现消失时额外的执行函数'); \n\t    }\n\t\n\t    render(){\n\t        const popover = ( // 可以通过style自定义位置\n\t            <Popover>\n\t                <ul className=\"ph-popover-list\">\n\t                    <li className=\"ph-popover-item\">未上线单店</li>\n\t                    <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                </ul>\n\t            </Popover>\n\t        );\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Whisper/Popover</h2>\n\t                <h3 className=\"comp-type\">placement(defult:bottom)</h3>\n\t                <div className=\"content\">\n\t                    <Whisper onChange={this.onChange} target={popover} distance={10} >Bottom</Whisper>\n\t                    <Whisper placement=\"top\" onChange={this.onChange} target={popover} distance={10} >Top</Whisper>\n\t                    <Whisper placement=\"right\" onChange={this.onChange} target={popover} distance={10} >Right</Whisper>\n\t                    <Whisper placement=\"left\" onChange={this.onChange} target={popover} distance={10} >Left</Whisper>\n\t                    <Whisper placement=\"top right\" onChange={this.onChange} target={popover} distance={10} >Top Right</Whisper>\n\t                    <Whisper placement=\"top left\" onChange={this.onChange} target={popover} distance={10} >Top Left</Whisper>\n\t                    <Whisper placement=\"bottom right\" onChange={this.onChange} target={popover} distance={10} >Bottom Right</Whisper>\n\t                    <Whisper placement=\"bottom left\" onChange={this.onChange} target={popover} distance={10} >Bottom Left</Whisper>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Whisper, Popover} from '../../src/index';\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onChange(){\n\t        console.log('气泡出现消失时额外的执行函数'); \n\t    }\n\t\n\t    render(){\n\t        const popover = ( // 可以通过style自定义位置\n\t            <Popover>\n\t                <ul className=\"ph-popover-list\">\n\t                    <li className=\"ph-popover-item\">未上线单店</li>\n\t                    <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                </ul>\n\t            </Popover>\n\t        );\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Whisper/Popover</h2>\n\t                <h3 className=\"comp-type\">placement(defult:bottom)</h3>\n\t                <div className=\"content\">\n\t                    <Whisper onChange={this.onChange} target={popover} distance={10} >Bottom</Whisper>\n\t                    <Whisper placement=\"top\" onChange={this.onChange} target={popover} distance={10} >Top</Whisper>\n\t                    <Whisper placement=\"right\" onChange={this.onChange} target={popover} distance={10} >Right</Whisper>\n\t                    <Whisper placement=\"left\" onChange={this.onChange} target={popover} distance={10} >Left</Whisper>\n\t                    <Whisper placement=\"top right\" onChange={this.onChange} target={popover} distance={10} >Top Right</Whisper>\n\t                    <Whisper placement=\"top left\" onChange={this.onChange} target={popover} distance={10} >Top Left</Whisper>\n\t                    <Whisper placement=\"bottom right\" onChange={this.onChange} target={popover} distance={10} >Bottom Right</Whisper>\n\t                    <Whisper placement=\"bottom left\" onChange={this.onChange} target={popover} distance={10} >Bottom Left</Whisper>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Popup": {
            "name": "Popup",
            "shortname": "Popup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Popup.js",
            "line": 7,
            "description": "弹层",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button, Popup} from '../../src/index';\n\t\n\texport default class popup extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            topVisible: false,\n\t            bottomVisible: false\n\t        }\n\t    }\n\t\n\t    onShowTopPopup(){\n\t        this.setState({\n\t          topVisible: true\n\t        });\n\t    }\n\t\n\t    onCloseTopPopup(){\n\t        this.setState({\n\t          topVisible: false\n\t        });\n\t    }\n\t\n\t    onShowBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: true\n\t        });\n\t    }\n\t\n\t    onCloseBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: false\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Popup</h2>\n\t                <h3 className=\"comp-type\">弹层 Top</h3>\n\t                <Button block radius phSize=\"lg\" phStyle=\"primary\" onClick={::this.onShowTopPopup}>Top Popup</Button>\n\t                <Popup align=\"top\" visible={this.state.topVisible} onClose={::this.onCloseTopPopup}>\n\t                    <ul className=\"ph-popup-list\">\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>未上线单店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>未上线连锁店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>在线单店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>在线连锁店</li>\n\t                    </ul>\n\t                </Popup>\n\t                \n\t                <h3 className=\"comp-type\">弹层 Bottom(提供ActionSheet样式)</h3>\n\t                <Button block radius phSize=\"lg\" phStyle=\"primary\" onClick={::this.onShowBottomPopup}>Bottom Popup</Button>\n\t                <Popup align=\"bottom\" visible={this.state.bottomVisible} onClose={::this.onCloseBottomPopup}>\n\t                    <div className=\"ph-action-sheet\">\n\t                        <ul>\n\t                            <li className=\"ph-popup-item ph-popup-tip\">确认 删除此作品？</li>\n\t                            <li className=\"ph-popup-item ph-popup-delete\" onClick={::this.onCloseBottomPopup}>删除作品</li>\n\t                        </ul>\n\t                        <div className=\"ph-popup-operate\" onClick={::this.onCloseBottomPopup}>取消</div>\n\t                    </div>\n\t                </Popup>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button, Popup} from '../../src/index';\n\t\n\texport default class popup extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            topVisible: false,\n\t            bottomVisible: false\n\t        }\n\t    }\n\t\n\t    onShowTopPopup(){\n\t        this.setState({\n\t          topVisible: true\n\t        });\n\t    }\n\t\n\t    onCloseTopPopup(){\n\t        this.setState({\n\t          topVisible: false\n\t        });\n\t    }\n\t\n\t    onShowBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: true\n\t        });\n\t    }\n\t\n\t    onCloseBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: false\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Popup</h2>\n\t                <h3 className=\"comp-type\">弹层 Top</h3>\n\t                <Button block radius phSize=\"lg\" phStyle=\"primary\" onClick={::this.onShowTopPopup}>Top Popup</Button>\n\t                <Popup align=\"top\" visible={this.state.topVisible} onClose={::this.onCloseTopPopup}>\n\t                    <ul className=\"ph-popup-list\">\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>未上线单店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>未上线连锁店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>在线单店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>在线连锁店</li>\n\t                    </ul>\n\t                </Popup>\n\t                \n\t                <h3 className=\"comp-type\">弹层 Bottom(提供ActionSheet样式)</h3>\n\t                <Button block radius phSize=\"lg\" phStyle=\"primary\" onClick={::this.onShowBottomPopup}>Bottom Popup</Button>\n\t                <Popup align=\"bottom\" visible={this.state.bottomVisible} onClose={::this.onCloseBottomPopup}>\n\t                    <div className=\"ph-action-sheet\">\n\t                        <ul>\n\t                            <li className=\"ph-popup-item ph-popup-tip\">确认 删除此作品？</li>\n\t                            <li className=\"ph-popup-item ph-popup-delete\" onClick={::this.onCloseBottomPopup}>删除作品</li>\n\t                        </ul>\n\t                        <div className=\"ph-popup-operate\" onClick={::this.onCloseBottomPopup}>取消</div>\n\t                    </div>\n\t                </Popup>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/Row.js",
            "line": 5,
            "description": "行",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM from 'react-dom';\n\t\n\timport {Grid,Row,Col} from '../../src/index';\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\">容器属性 align-items(default:stretch)</h3>\n\t                <h3 className=\"comp-tip\">stretch</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"stretch\">\n\t                        <Col>\n\t                            <div className='col-demo'>stretch</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />stretch<br />stretch<br />stretch</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">baseline</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"baseline\">\n\t                        <Col>\n\t                            <div className='col-demo'>baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline<br />baseline<br />baseline</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"top\">\n\t                        <Col>\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top<br />top<br />top</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"bottom\">\n\t                        <Col>\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom<br />bottom<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">center</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"center\">\n\t                        <Col>\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center<br />center<br />center</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 align-self(default:auto)</h3>\n\t                <h3 className=\"comp-tip\">auto</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col>\n\t                            <div className='col-demo'>auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto auto auto</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col align=\"top\">\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col align=\"center\">\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col align=\"bottom\">\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col >\n\t                            <div className='col-demo'>top<br />center<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 flex</h3>\n\t                <h3 className=\"comp-tip\">width</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col width=\"15\">\n\t                            <div className='col-demo'>15</div>\n\t                        </Col>\n\t                        <Col width=\"20\">\n\t                            <div className='col-demo'>20</div>\n\t                        </Col>\n\t                        <Col width=\"25\">\n\t                            <div className='col-demo'>25</div>\n\t                        </Col>\n\t                        <Col width=\"40\">\n\t                            <div className='col-demo'>40<br />40<br />40</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">offset (margin-left)</h3>\n\t                <Row>\n\t                    <Col width=\"20\" offset=\"10\">\n\t                        <div className='col-demo'>10</div>\n\t                    </Col>\n\t                    <Col width=\"40\" offset=\"10\" >\n\t                        <div className='col-demo'>10<br />10<br />10</div>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t",
                "\t\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM from 'react-dom';\n\t\n\timport {Grid,Row,Col} from '../../src/index';\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\">容器属性 align-items(default:stretch)</h3>\n\t                <h3 className=\"comp-tip\">stretch</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"stretch\">\n\t                        <Col>\n\t                            <div className='col-demo'>stretch</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>stretch<br />stretch<br />stretch<br />stretch</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">baseline</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"baseline\">\n\t                        <Col>\n\t                            <div className='col-demo'>baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>baseline<br />baseline<br />baseline<br />baseline</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"top\">\n\t                        <Col>\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>top<br />top<br />top<br />top</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"bottom\">\n\t                        <Col>\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>bottom<br />bottom<br />bottom<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">center</h3>\n\t                <Grid className=\"content\">\n\t                    <Row align=\"center\">\n\t                        <Col>\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>center<br />center<br />center<br />center</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 align-self(default:auto)</h3>\n\t                <h3 className=\"comp-tip\">auto</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col>\n\t                            <div className='col-demo'>auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto</div>\n\t                        </Col>\n\t                        <Col>\n\t                            <div className='col-demo'>auto auto auto auto</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col align=\"top\">\n\t                            <div className='col-demo'>top</div>\n\t                        </Col>\n\t                        <Col align=\"center\">\n\t                            <div className='col-demo'>center</div>\n\t                        </Col>\n\t                        <Col align=\"bottom\">\n\t                            <div className='col-demo'>bottom</div>\n\t                        </Col>\n\t                        <Col >\n\t                            <div className='col-demo'>top<br />center<br />bottom</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t\n\t                <h3 className=\"comp-type\">项目属性 flex</h3>\n\t                <h3 className=\"comp-tip\">width</h3>\n\t                <Grid className=\"content\">\n\t                    <Row>\n\t                        <Col width=\"15\">\n\t                            <div className='col-demo'>15</div>\n\t                        </Col>\n\t                        <Col width=\"20\">\n\t                            <div className='col-demo'>20</div>\n\t                        </Col>\n\t                        <Col width=\"25\">\n\t                            <div className='col-demo'>25</div>\n\t                        </Col>\n\t                        <Col width=\"40\">\n\t                            <div className='col-demo'>40<br />40<br />40</div>\n\t                        </Col>\n\t                    </Row>\n\t                </Grid>\n\t                <h3 className=\"comp-tip\">offset (margin-left)</h3>\n\t                <Row>\n\t                    <Col width=\"20\" offset=\"10\">\n\t                        <div className='col-demo'>10</div>\n\t                    </Col>\n\t                    <Col width=\"40\" offset=\"10\" >\n\t                        <div className='col-demo'>10<br />10<br />10</div>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "since": "0.1.0"
        },
        "Slider": {
            "name": "Slider",
            "shortname": "Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Slider.js",
            "line": 8,
            "description": "滑动输入条 Slider",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Slider} from '../../src/index';\n\t\n\texport default class slider extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            progress: 50,\n\t            progress1: 0,\n\t        }\n\t    }\n\t\n\t    onChange(newProgress){ // progress百分比\n\t        this.setState({\n\t            progress: newProgress\n\t        });\n\t    }\n\t\n\t    onChange1(newProgress){\n\t        this.setState({\n\t            progress1: newProgress\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Slider</h2>\n\t                <h3 className=\"comp-type\">placement(default:top)</h3>\n\t                <div className=\"content\">\n\t                    <Slider onChange={::this.onChange} progress={this.state.progress} />\n\t                    <div style={{textAlign:'center',padding:'1rem 0'}}>Progress: {this.state.progress}</div>\n\t                </div>\n\t                <h3 className=\"comp-type\">placement(bottom)</h3>\n\t                <div className=\"content\">\n\t                    <Slider onChange={::this.onChange1} progress={this.state.progress1} placement='bottom' />\n\t                    <div style={{textAlign:'center',padding:'1rem 0'}}>Progress: {this.state.progress1}</div>\n\t                </div>\n\t                <h3 className=\"comp-tip\">disabled</h3>\n\t                <div className=\"content\">\n\t                    <Slider disabled progress={10} placement='bottom' />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Slider} from '../../src/index';\n\t\n\texport default class slider extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            progress: 50,\n\t            progress1: 0,\n\t        }\n\t    }\n\t\n\t    onChange(newProgress){ // progress百分比\n\t        this.setState({\n\t            progress: newProgress\n\t        });\n\t    }\n\t\n\t    onChange1(newProgress){\n\t        this.setState({\n\t            progress1: newProgress\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Slider</h2>\n\t                <h3 className=\"comp-type\">placement(default:top)</h3>\n\t                <div className=\"content\">\n\t                    <Slider onChange={::this.onChange} progress={this.state.progress} />\n\t                    <div style={{textAlign:'center',padding:'1rem 0'}}>Progress: {this.state.progress}</div>\n\t                </div>\n\t                <h3 className=\"comp-type\">placement(bottom)</h3>\n\t                <div className=\"content\">\n\t                    <Slider onChange={::this.onChange1} progress={this.state.progress1} placement='bottom' />\n\t                    <div style={{textAlign:'center',padding:'1rem 0'}}>Progress: {this.state.progress1}</div>\n\t                </div>\n\t                <h3 className=\"comp-tip\">disabled</h3>\n\t                <div className=\"content\">\n\t                    <Slider disabled progress={10} placement='bottom' />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Star": {
            "name": "Star",
            "shortname": "Star",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/Star.js",
            "line": 5,
            "description": "星级评价(Star)组件<br />\n提供的UI展示属性接口包括<br/>\n<ul>\n    <li>rate：星级评价的分数(满分为50)<code>默认为0</code></li>\n    <li>size：星星的大小(可选md、lg、默认3种size)<code></code></li>\n</ul><br>\n使用方式:\n<pre><code>&#60;Star rate={50} size={10}/&#62;</code>\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by slashhuang on 16/5/31.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Star} from '../../src/index';\n\t\n\texport default class StarDemo extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Star</h2>\n\t                <h3 className=\"comp-type\">星级 Rate(default:0)</h3>\n\t                <div className=\"content\">\n\t                    <Star />\n\t                    <Star Rate={5} />\n\t                    <Star Rate={15} />\n\t                    <Star Rate={20} />\n\t                    <Star Rate={25} />\n\t                    <Star Rate={30} />\n\t                    <Star Rate={35} />\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 size(default:sm)</h3>\n\t                <div className=\"content\">\n\t                    <Star Rate={40} phSize='sm' />\n\t                    <Star Rate={45} phSize='md' />\n\t                    <Star Rate={50} phSize='lg' />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\t/**\n\t * Created by slashhuang on 16/5/31.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Star} from '../../src/index';\n\t\n\texport default class StarDemo extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Star</h2>\n\t                <h3 className=\"comp-type\">星级 Rate(default:0)</h3>\n\t                <div className=\"content\">\n\t                    <Star />\n\t                    <Star Rate={5} />\n\t                    <Star Rate={15} />\n\t                    <Star Rate={20} />\n\t                    <Star Rate={25} />\n\t                    <Star Rate={30} />\n\t                    <Star Rate={35} />\n\t                </div>\n\t                <h3 className=\"comp-type\">大小 size(default:sm)</h3>\n\t                <div className=\"content\">\n\t                    <Star Rate={40} phSize='sm' />\n\t                    <Star Rate={45} phSize='md' />\n\t                    <Star Rate={50} phSize='lg' />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Swipe": {
            "name": "Swipe",
            "shortname": "Swipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Swipe.js",
            "line": 9,
            "description": "功能组件-左滑swipe",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Swipe} from '../../src/index';\n\t\n\texport default class swipe extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onDelete(){\n\t        console.log('delete!!');\n\t    }\n\t\n\t    onCancle(){\n\t        console.log('cancle!!');\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Swipe</h2>\n\t                <h3 className=\"comp-type\">左滑动</h3>\n\t                <ul>\n\t                    <li>\n\t                        <Swipe buttons={[\n\t                                {text: '删除', onHandle: this.onDelete, phStyle: 'error'},\n\t                                {text: '取消', onHandle: this.onCancle, phStyle: 'info'}\n\t                            ]} \n\t                        >\n\t                            <div style={{backgroundColor:'#fff',padding: '1rem'}}>\n\t                                内容\n\t                            </div>\n\t                        </Swipe>\n\t                    </li>\n\t                </ul>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Swipe} from '../../src/index';\n\t\n\texport default class swipe extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onDelete(){\n\t        console.log('delete!!');\n\t    }\n\t\n\t    onCancle(){\n\t        console.log('cancle!!');\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Swipe</h2>\n\t                <h3 className=\"comp-type\">左滑动</h3>\n\t                <ul>\n\t                    <li>\n\t                        <Swipe buttons={[\n\t                                {text: '删除', onHandle: this.onDelete, phStyle: 'error'},\n\t                                {text: '取消', onHandle: this.onCancle, phStyle: 'info'}\n\t                            ]} \n\t                        >\n\t                            <div style={{backgroundColor:'#fff',padding: '1rem'}}>\n\t                                内容\n\t                            </div>\n\t                        </Swipe>\n\t                    </li>\n\t                </ul>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Switch": {
            "name": "Switch",
            "shortname": "Switch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/Switch.js",
            "line": 6,
            "description": "开关切换，仿真ios的开关控件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Switch} from '../../src/index';\n\t\n\texport default class switchs extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            on: true\n\t        };\n\t    }\n\t\n\t    onChange(){\n\t        this.setState({\n\t            on: !this.state.on\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Switch</h2>\n\t                <h3 className=\"comp-type\">不带任何参数</h3>\n\t                <div className=\"content\">\n\t                    <Switch />\n\t                </div>\n\t                <h3 className=\"comp-type\">defaultChecked 初始传值</h3>\n\t                <div className=\"content\">\n\t                    <Switch defaultChecked={true} />\n\t                </div>\n\t                <h3 className=\"comp-type\">checked和onChange配合使用</h3>\n\t                <div className=\"content\">\n\t                    <Switch checked={this.state.on} onChange={::this.onChange} />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Switch} from '../../src/index';\n\t\n\texport default class switchs extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            on: true\n\t        };\n\t    }\n\t\n\t    onChange(){\n\t        this.setState({\n\t            on: !this.state.on\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Switch</h2>\n\t                <h3 className=\"comp-type\">不带任何参数</h3>\n\t                <div className=\"content\">\n\t                    <Switch />\n\t                </div>\n\t                <h3 className=\"comp-type\">defaultChecked 初始传值</h3>\n\t                <div className=\"content\">\n\t                    <Switch defaultChecked={true} />\n\t                </div>\n\t                <h3 className=\"comp-type\">checked和onChange配合使用</h3>\n\t                <div className=\"content\">\n\t                    <Switch checked={this.state.on} onChange={::this.onChange} />\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "选项卡",
            "namespace": "",
            "file": "src/Tab.js",
            "line": 5,
            "description": "tab选项卡组件\n- 标签内容为heading属性，children部分为对应要显示的内容<br/>\n- 此外支持自定义类名,事件等操作<br/>\n具体属性和接口如下：\n<ul>\n    <li>heading; 标签卡的显示内容，默认‘tab’ 。\n        虽然有默认值但是这应该是必填的。</li>\n      <li>\n        例如:\n         <code>\n           Tabset activeIndex ={0} width={30}\n              Tab heading='tab1' className='测试'>hahadhdad1\n              /Tab\n           /Tabset\n         </code>\n      </li>\n      <li>clickCallback: 点击事件的回调函数，默认为null</li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Tabset,Tab} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            index:0\n\t        }\n\t    }\n\t\n\t    tabCallback(index){\n\t        console.log('测试tabset 回调'+index);\n\t    }\n\t\n\t    clickCallback(index){\n\t        console.log(index);\n\t    }\n\t\n\t    test(){\n\t        alert('测试自定义tab点击事件');\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\">横向(default)</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex ={this.state.index} className='test-name' tabCallback={::this.tabCallback}>\n\t                        <Tab heading='标题1' className='tab-test'>\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' clickCallback={::this.clickCallback}>\n\t                            横向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            横向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <h3 className=\"comp-type\">竖向 vertical</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex={1} vertical width={30}>\n\t                        <Tab heading='标题1'>\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' onClick={::this.test}>\n\t                            竖向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            竖向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t           </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Tabset,Tab} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            index:0\n\t        }\n\t    }\n\t\n\t    tabCallback(index){\n\t        console.log('测试tabset 回调'+index);\n\t    }\n\t\n\t    clickCallback(index){\n\t        console.log(index);\n\t    }\n\t\n\t    test(){\n\t        alert('测试自定义tab点击事件');\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\">横向(default)</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex ={this.state.index} className='test-name' tabCallback={::this.tabCallback}>\n\t                        <Tab heading='标题1' className='tab-test'>\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' clickCallback={::this.clickCallback}>\n\t                            横向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            横向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <h3 className=\"comp-type\">竖向 vertical</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex={1} vertical width={30}>\n\t                        <Tab heading='标题1'>\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' onClick={::this.test}>\n\t                            竖向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            竖向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t           </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "TableView": {
            "name": "TableView",
            "shortname": "TableView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/TableView.js",
            "line": 6,
            "description": "展现形式如表格一般,用来组织数据，显示链接的集合，或一系列的控件。<br />\n使用时需注意组件的子元素需要跳转功能需加上href标签并赋予正确的url，不论什么标签",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {TableView,Badge,Switch} from '../../src/index';\n\t\n\texport default class tableview extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:''\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">TableView</h2>\n\t                <TableView>\n\t                    <a href=\"http://www.baidu.com\">Item 1</a>\n\t                    <a>Item 2 <Badge phStyle=\"primary\">2</Badge></a>\n\t                    <a href=\"###\">Item 3 <Badge>5</Badge></a>\n\t                    <a>\n\t                        Item 4 <Switch />\n\t                    </a>\n\t                </TableView>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {TableView,Badge,Switch} from '../../src/index';\n\t\n\texport default class tableview extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:''\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">TableView</h2>\n\t                <TableView>\n\t                    <a href=\"http://www.baidu.com\">Item 1</a>\n\t                    <a>Item 2 <Badge phStyle=\"primary\">2</Badge></a>\n\t                    <a href=\"###\">Item 3 <Badge>5</Badge></a>\n\t                    <a>\n\t                        Item 4 <Switch />\n\t                    </a>\n\t                </TableView>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Tabset": {
            "name": "Tabset",
            "shortname": "Tabset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "选项卡",
            "namespace": "",
            "file": "src/Tabset.js",
            "line": 17,
            "description": "tabset选项卡组件\n- 可以指定当前actie选项。\n- 支持选项卡横排，竖排两种情况。\n- 此外支持自定义类名,事件等操作\n具体属性和接口如下：\n<ul>\n    <li>activeIndex; 当前选中标签卡，默认0</li>\n    <li>vertiacl; 是否竖排，如需要直接添加改属性即可，默认不竖排</li>\n    <li>width; 选项卡头部的宽度，取值0-100之间 即class＝‘col－20’，取值即可，注只有在竖排的情况下生效，\n         也就是没有vertical属性，设置width也没用的，默认20\n         例如横排情况:\n    </li>\n    <li>\n         <code>\n            Tabset activeIndex ={0} width={30}\n              Tab heading='tab1' className='测试'>hahadhdad1\n              /Tab\n           /Tabset\n         </code>\n        上面的width是不起作用的\n       竖排情况:\n         <code>\n             Tabset activeIndex ={0} vertical width={30}\n         </code>\n        此时表明默认选中第一个选项卡，并且竖排标签部分width为30%\n\n         </li>\n\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Tabset,Tab} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            index:0\n\t        }\n\t    }\n\t\n\t    tabCallback(index){\n\t        console.log('测试tabset 回调'+index);\n\t    }\n\t\n\t    clickCallback(index){\n\t        console.log(index);\n\t    }\n\t\n\t    test(){\n\t        alert('测试自定义tab点击事件');\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\">横向(default)</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex ={this.state.index} className='test-name' tabCallback={::this.tabCallback}>\n\t                        <Tab heading='标题1' className='tab-test'>\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' clickCallback={::this.clickCallback}>\n\t                            横向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            横向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <h3 className=\"comp-type\">竖向 vertical</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex={1} vertical width={30}>\n\t                        <Tab heading='标题1'>\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' onClick={::this.test}>\n\t                            竖向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            竖向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t           </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Tabset,Tab} from '../../src/index';\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            index:0\n\t        }\n\t    }\n\t\n\t    tabCallback(index){\n\t        console.log('测试tabset 回调'+index);\n\t    }\n\t\n\t    clickCallback(index){\n\t        console.log(index);\n\t    }\n\t\n\t    test(){\n\t        alert('测试自定义tab点击事件');\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\">横向(default)</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex ={this.state.index} className='test-name' tabCallback={::this.tabCallback}>\n\t                        <Tab heading='标题1' className='tab-test'>\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' clickCallback={::this.clickCallback}>\n\t                            横向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            横向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <h3 className=\"comp-type\">竖向 vertical</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex={1} vertical width={30}>\n\t                        <Tab heading='标题1'>\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading='标题2' onClick={::this.test}>\n\t                            竖向内容2\n\t                        </Tab>\n\t                        <Tab heading='标题3'>\n\t                            竖向内容3\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t           </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "TextArea": {
            "name": "TextArea",
            "shortname": "TextArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/Textarea.js",
            "line": 6,
            "description": "表单元素textarea",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Textarea} from '../../src/index';\n\t\n\texport default class textarea extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:'',\n\t            words: '哈哈哈哈',\n\t            MAX_LENGTH: 100\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Textarea</h2>\n\t                <h3 className=\"comp-type\">不计字数 isCount(default:false)</h3>\n\t                <div className=\"content\">\n\t                    <Textarea value={this.state.name} placeholder='请输入...'\n\t                    onChange={this.setValue.bind(this,'name')}></Textarea>\n\t                </div>\n\t                <h3 className=\"comp-type\">计字数 isCount(true)</h3>\n\t                <div className=\"content\">\n\t                    <Textarea value={this.state.words} placeholder='请输入...'\n\t                    onChange={this.setValue.bind(this,'words')} isCount={true} maxLength={this.state.MAX_LENGTH}></Textarea>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Textarea} from '../../src/index';\n\t\n\texport default class textarea extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:'',\n\t            words: '哈哈哈哈',\n\t            MAX_LENGTH: 100\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Textarea</h2>\n\t                <h3 className=\"comp-type\">不计字数 isCount(default:false)</h3>\n\t                <div className=\"content\">\n\t                    <Textarea value={this.state.name} placeholder='请输入...'\n\t                    onChange={this.setValue.bind(this,'name')}></Textarea>\n\t                </div>\n\t                <h3 className=\"comp-type\">计字数 isCount(true)</h3>\n\t                <div className=\"content\">\n\t                    <Textarea value={this.state.words} placeholder='请输入...'\n\t                    onChange={this.setValue.bind(this,'words')} isCount={true} maxLength={this.state.MAX_LENGTH}></Textarea>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Toast": {
            "name": "Toast",
            "shortname": "Toast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Toast.js",
            "line": 7,
            "description": "飘字",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button, Toast} from '../../src/index';\n\t\n\texport default class toast extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            duration: 2000\n\t        }\n\t    }\n\t\n\t    showToast(){\n\t        Toast.info('只显示信息的toast！！', this.state.duration, ()=>{\n\t            console.log('额外的执行内容');\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Toast</h2>\n\t                <h3 className=\"comp-type\">自定义飘字</h3>\n\t                <Button block phSize=\"lg\" phStyle=\"primary\" onClick={::this.showToast}>点击飘字</Button>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Button, Toast} from '../../src/index';\n\t\n\texport default class toast extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            duration: 2000\n\t        }\n\t    }\n\t\n\t    showToast(){\n\t        Toast.info('只显示信息的toast！！', this.state.duration, ()=>{\n\t            console.log('额外的执行内容');\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Toast</h2>\n\t                <h3 className=\"comp-type\">自定义飘字</h3>\n\t                <Button block phSize=\"lg\" phStyle=\"primary\" onClick={::this.showToast}>点击飘字</Button>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        },
        "Whisper": {
            "name": "Whisper",
            "shortname": "Whisper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "提示组件",
            "namespace": "",
            "file": "src/Whisper.js",
            "line": 17,
            "description": "倾听者",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Whisper, Popover} from '../../src/index';\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onChange(){\n\t        console.log('气泡出现消失时额外的执行函数'); \n\t    }\n\t\n\t    render(){\n\t        const popover = ( // 可以通过style自定义位置\n\t            <Popover>\n\t                <ul className=\"ph-popover-list\">\n\t                    <li className=\"ph-popover-item\">未上线单店</li>\n\t                    <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                </ul>\n\t            </Popover>\n\t        );\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Whisper/Popover</h2>\n\t                <h3 className=\"comp-type\">placement(defult:bottom)</h3>\n\t                <div className=\"content\">\n\t                    <Whisper onChange={this.onChange} target={popover} distance={10} >Bottom</Whisper>\n\t                    <Whisper placement=\"top\" onChange={this.onChange} target={popover} distance={10} >Top</Whisper>\n\t                    <Whisper placement=\"right\" onChange={this.onChange} target={popover} distance={10} >Right</Whisper>\n\t                    <Whisper placement=\"left\" onChange={this.onChange} target={popover} distance={10} >Left</Whisper>\n\t                    <Whisper placement=\"top right\" onChange={this.onChange} target={popover} distance={10} >Top Right</Whisper>\n\t                    <Whisper placement=\"top left\" onChange={this.onChange} target={popover} distance={10} >Top Left</Whisper>\n\t                    <Whisper placement=\"bottom right\" onChange={this.onChange} target={popover} distance={10} >Bottom Right</Whisper>\n\t                    <Whisper placement=\"bottom left\" onChange={this.onChange} target={popover} distance={10} >Bottom Left</Whisper>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport ReactDOM,{findDOMNode} from 'react-dom';\n\timport {Whisper, Popover} from '../../src/index';\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onChange(){\n\t        console.log('气泡出现消失时额外的执行函数'); \n\t    }\n\t\n\t    render(){\n\t        const popover = ( // 可以通过style自定义位置\n\t            <Popover>\n\t                <ul className=\"ph-popover-list\">\n\t                    <li className=\"ph-popover-item\">未上线单店</li>\n\t                    <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                </ul>\n\t            </Popover>\n\t        );\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Whisper/Popover</h2>\n\t                <h3 className=\"comp-type\">placement(defult:bottom)</h3>\n\t                <div className=\"content\">\n\t                    <Whisper onChange={this.onChange} target={popover} distance={10} >Bottom</Whisper>\n\t                    <Whisper placement=\"top\" onChange={this.onChange} target={popover} distance={10} >Top</Whisper>\n\t                    <Whisper placement=\"right\" onChange={this.onChange} target={popover} distance={10} >Right</Whisper>\n\t                    <Whisper placement=\"left\" onChange={this.onChange} target={popover} distance={10} >Left</Whisper>\n\t                    <Whisper placement=\"top right\" onChange={this.onChange} target={popover} distance={10} >Top Right</Whisper>\n\t                    <Whisper placement=\"top left\" onChange={this.onChange} target={popover} distance={10} >Top Left</Whisper>\n\t                    <Whisper placement=\"bottom right\" onChange={this.onChange} target={popover} distance={10} >Bottom Right</Whisper>\n\t                    <Whisper placement=\"bottom left\" onChange={this.onChange} target={popover} distance={10} >Bottom Left</Whisper>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示",
                "源码"
            ],
            "show": true
        }
    },
    "classitems": [
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 10,
            "description": "给className添加前缀后返回className",
            "itemtype": "method",
            "name": "getClassName",
            "params": [
                {
                    "name": "name",
                    "description": "从该字符串中去查找",
                    "type": "String"
                },
                {
                    "name": "pre",
                    "description": "是否添加Component中定义的class前缀，默认添加",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 28,
            "description": "验证props中的样式是否符合规则",
            "itemtype": "method",
            "name": "getClassNames",
            "params": [
                {
                    "name": "props",
                    "description": "从该对象中去查找",
                    "type": "Object"
                },
                {
                    "name": "pre",
                    "description": "是否添加Component中定义的class前缀，默认添加",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 44,
            "description": "给多个className添加前缀后返回",
            "itemtype": "method",
            "name": "getClassNamesForArguments",
            "params": [
                {
                    "name": "arguments",
                    "description": "多个class参数",
                    "type": "Arguments String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 66,
            "description": "设置css类名前缀",
            "itemtype": "method",
            "name": "setPrefix",
            "params": [
                {
                    "name": "name",
                    "description": "class名字",
                    "type": "String"
                },
                {
                    "name": "pre",
                    "description": "是否添加前缀",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 86,
            "description": "检查元素是否存在样式名",
            "itemtype": "method",
            "name": "hasClass",
            "params": [
                {
                    "name": "obj",
                    "description": "元素",
                    "type": "Object"
                },
                {
                    "name": "cls",
                    "description": "需要检查的样式名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 97,
            "description": "给元素增加一个样式名",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "obj",
                    "description": "元素",
                    "type": "Object"
                },
                {
                    "name": "cls",
                    "description": "样式名",
                    "type": "String"
                }
            ],
            "class": "Accordion"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 106,
            "description": "给元素删除一个样式名",
            "itemtype": "method",
            "name": "removeClass",
            "params": [
                {
                    "name": "obj",
                    "description": "元素",
                    "type": "Object"
                },
                {
                    "name": "cls",
                    "description": "样式名",
                    "type": "String"
                }
            ],
            "class": "Accordion"
        },
        {
            "file": "src/utils/MethodMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Accordion"
        },
        {
            "file": "src/utils/PropertyMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Accordion"
        },
        {
            "file": "src/utils/Tool.js",
            "line": 1,
            "description": "Created by mac on 16/11/28.",
            "class": "Accordion"
        },
        {
            "file": "src/utils/constants.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Accordion"
        },
        {
            "file": "src/utils/constants.js",
            "line": 11,
            "description": "状态",
            "class": "Accordion"
        },
        {
            "file": "src/utils/constants.js",
            "line": 62,
            "description": "颜色",
            "class": "Accordion"
        },
        {
            "file": "src/utils/constants.js",
            "line": 76,
            "description": "form列表相关",
            "class": "Accordion"
        },
        {
            "file": "src/utils/constants.js",
            "line": 86,
            "description": "tab",
            "class": "Accordion"
        },
        {
            "file": "src/utils/extend.js",
            "line": 5,
            "description": "A recursive merge between two objects.",
            "params": [
                {
                    "name": "base",
                    "description": "- the object whose properties are to be overwritten. It\n                  should be either the root level or some nested level."
                },
                {
                    "name": "override",
                    "description": "- an object containing properties to be overwritten. It\n                  should have the same structure as the object object."
                }
            ],
            "class": "Accordion"
        },
        {
            "file": "src/Accordion.js",
            "line": 19,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 25,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 31,
            "description": "动作的执行函数",
            "itemtype": "property",
            "name": "onChange",
            "type": "Function",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Animate.js",
            "line": 16,
            "description": "动画名称,默认fade",
            "itemtype": "property",
            "name": "transitionName",
            "type": "String",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/Animate.js",
            "line": 22,
            "description": "动画进入延迟时间",
            "itemtype": "property",
            "name": "transitionEnterTimeout",
            "type": "Number",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/Animate.js",
            "line": 28,
            "description": "动画退出延迟时间",
            "itemtype": "property",
            "name": "transitionLeaveTimeout",
            "type": "Number",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/Badge.js",
            "line": 31,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "btn",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/Badge.js",
            "line": 38,
            "description": "badge徽章颜色[primary、warning、danger、info、error、success],默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "string",
            "default": "''",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/Badge.js",
            "line": 45,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "a",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/Button.js",
            "line": 40,
            "description": "按钮尺寸,分别为sm、md、lg,默认sm不用指定",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "sm",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 47,
            "description": "颜色[primary,error、warning、danger、link、gray、white、success],默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "Boolean",
            "default": "'primary'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 54,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 60,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 66,
            "description": "块级显示",
            "itemtype": "property",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/8.",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 27,
            "description": "是否有自适应宽度，垂直排列等属性，取值为justify(水平排列)或者tacked(垂直排列)",
            "itemtype": "property",
            "name": "phType",
            "type": "String",
            "default": "'justify'",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 34,
            "description": "某个按钮被按下后的回调",
            "itemtype": "property",
            "name": "activeCallback",
            "type": "Function",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/Col.js",
            "line": 18,
            "description": "占100份的多少份，目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)",
            "itemtype": "property",
            "name": "width",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Col.js",
            "line": 24,
            "description": "偏移多少，，目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)",
            "itemtype": "property",
            "name": "offset，默认不偏移",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Col.js",
            "line": 30,
            "description": "竖直方向的排列是靠上、居中还是靠下",
            "itemtype": "property",
            "name": "offset，默认不偏移",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Dialog.js",
            "line": 20,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Dialog",
            "module": "操作类组件"
        },
        {
            "file": "src/Dialog.js",
            "line": 26,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Dialog",
            "module": "操作类组件"
        },
        {
            "file": "src/Drag.js",
            "line": 17,
            "description": "抓取的执行函数,对应TouchStart/TouchMove",
            "itemtype": "property",
            "name": "onDrag",
            "type": "Function",
            "class": "Drag",
            "module": "辅助组件"
        },
        {
            "file": "src/Drag.js",
            "line": 23,
            "description": "放开的执行函数,对应TouchEnd",
            "itemtype": "property",
            "name": "onDrop",
            "type": "Function",
            "class": "Drag",
            "module": "辅助组件"
        },
        {
            "file": "src/FormGroup.js",
            "line": 22,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "class": "FormGroup",
            "module": "表单组件"
        },
        {
            "file": "src/FormGroup.js",
            "line": 28,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "FormGroup",
            "module": "表单组件"
        },
        {
            "file": "src/Input.js",
            "line": 19,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Input.js",
            "line": 25,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Label.js",
            "line": 49,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "btn",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/Label.js",
            "line": 56,
            "description": "label标签大小 [lg、md、sm],默认为sm不用指定",
            "itemtype": "property",
            "name": "phSize",
            "type": "string",
            "default": "'sm'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/Label.js",
            "line": 63,
            "description": "label标签颜色[primary、warning、danger、info、error、success],默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "string",
            "default": "'primary'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/Label.js",
            "line": 70,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "a",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/Popover.js",
            "line": 19,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/Popup.js",
            "line": 20,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 26,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 32,
            "description": "弹层的位置,默认top",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 38,
            "description": "关闭的执行函数",
            "itemtype": "property",
            "name": "onClose",
            "type": "Function",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Row.js",
            "line": 18,
            "description": "竖直方向的排列是靠上、居中、靠下、拉伸至父容器最大高度还是基于text的baseline对齐",
            "itemtype": "property",
            "name": "offset，默认不偏移",
            "type": "Integer",
            "class": "Row",
            "module": "布局组件"
        },
        {
            "file": "src/Slider.js",
            "line": 21,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 27,
            "description": "初始进程,默认0",
            "itemtype": "property",
            "name": "progress",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 33,
            "description": "进程提示的位置,默认top",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Star.js",
            "line": 1,
            "description": "星级评价",
            "class": "Star",
            "module": "操作类组件"
        },
        {
            "file": "src/Star.js",
            "line": 30,
            "description": "星级评价分数",
            "itemtype": "property",
            "name": "Rate",
            "type": "number",
            "default": "默认为0，最高50",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/Star.js",
            "line": 37,
            "description": "星星大小",
            "itemtype": "property",
            "name": "phSize(v1.1.2以下用size),分别为sm、md、lg,默认sm不用指定",
            "type": "String",
            "default": "'sm'",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/Swipe.js",
            "line": 22,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/Swipe.js",
            "line": 28,
            "description": "按钮组",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/Switch.js",
            "line": 19,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "Stringx",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/Switch.js",
            "line": 25,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/Tab.js",
            "line": 36,
            "description": "选项卡的标题文字，默认为‘tab’\n但是这个应该是必填的，一个tab显示出来也没意思啦",
            "itemtype": "property",
            "name": "heading",
            "default": "'tab'",
            "class": "Tab",
            "module": "选项卡"
        },
        {
            "file": "src/Tab.js",
            "line": 43,
            "description": "点击事件的回调函数",
            "itemtype": "property",
            "name": "clickCallback",
            "default": "null",
            "class": "Tab",
            "module": "选项卡"
        },
        {
            "file": "src/TableView.js",
            "line": 20,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "class": "TableView",
            "module": "布局组件"
        },
        {
            "file": "src/TableView.js",
            "line": 26,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "TableView",
            "module": "布局组件"
        },
        {
            "file": "src/Tabset.js",
            "line": 61,
            "description": "指定默认选中的选项卡，默认为0",
            "itemtype": "property",
            "name": "activeIndex",
            "default": "0",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 67,
            "description": "是否竖排",
            "itemtype": "property",
            "name": "vertical",
            "default": "false || null",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 73,
            "description": "设置选项卡头部的宽度，只有竖排的情况下才起作用",
            "itemtype": "property",
            "name": "width",
            "default": "'20'",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 79,
            "description": "点击事件的回调函数,返回当前选中项",
            "itemtype": "property",
            "name": "tabCallback",
            "default": "null",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 98,
            "description": "首次进入获取active",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 103,
            "description": "props再次改变，再次判断active",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 137,
            "description": "tab handler",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Textarea.js",
            "line": 19,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 25,
            "description": "输入时执行的回调",
            "itemtype": "property",
            "name": "onChange",
            "type": "Function",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 31,
            "description": "是否显示输入计数",
            "itemtype": "property",
            "name": "isCount",
            "type": "Boolean",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 37,
            "description": "可输入的总长度",
            "itemtype": "property",
            "name": "maxLength",
            "type": "Number",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Toast.js",
            "line": 20,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Toast",
            "module": "操作类组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 30,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 36,
            "description": "显示的目标气泡",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 42,
            "description": "气泡的位置,默认bottom",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 48,
            "description": "气泡距离点击物的位置,默认15",
            "itemtype": "property",
            "name": "distance",
            "type": "Number",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 54,
            "description": "气泡显隐时可执行的额外函数,自定义",
            "itemtype": "property",
            "name": "onChange",
            "type": "Function",
            "class": "Whisper",
            "module": "提示组件"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: demo",
            "line": " src/Accordion.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Accordion.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Accordion.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Animate.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Badge.js:4"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Badge.js:4"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Badge.js:4"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Button.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Button.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Button.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ButtonGroup.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ButtonGroup.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ButtonGroup.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Col.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Col.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Dialog.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Dialog.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Dialog.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Drag.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/FormGroup.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/FormGroup.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/FormGroup.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Grid.js:26"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Grid.js:26"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Grid.js:26"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Input.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Input.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Input.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Label.js:14"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Label.js:14"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Label.js:14"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Popover.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Popover.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Popover.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Popup.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Popup.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Popup.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Row.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Row.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Slider.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Slider.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Slider.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Star.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Star.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Star.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Swipe.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Swipe.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Swipe.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Switch.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Switch.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Switch.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tab.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tab.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tab.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/TableView.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/TableView.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/TableView.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tabset.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tabset.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tabset.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Textarea.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Textarea.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Textarea.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Toast.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Toast.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Toast.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Whisper.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Whisper.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Whisper.js:17"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/ClassNameMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/MethodMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/PropertyMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/11/28.",
            "line": " src/utils/Tool.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/constants.js:1"
        },
        {
            "message": "Missing item type\n状态",
            "line": " src/utils/constants.js:11"
        },
        {
            "message": "Missing item type\n颜色",
            "line": " src/utils/constants.js:62"
        },
        {
            "message": "Missing item type\nform列表相关",
            "line": " src/utils/constants.js:76"
        },
        {
            "message": "Missing item type\ntab",
            "line": " src/utils/constants.js:86"
        },
        {
            "message": "Missing item type\nA recursive merge between two objects.",
            "line": " src/utils/extend.js:5"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/8.",
            "line": " src/ButtonGroup.js:1"
        },
        {
            "message": "Missing item type\n星级评价",
            "line": " src/Star.js:1"
        },
        {
            "message": "Missing item type\n首次进入获取active",
            "line": " src/Tabset.js:98"
        },
        {
            "message": "Missing item type\nprops再次改变，再次判断active",
            "line": " src/Tabset.js:103"
        },
        {
            "message": "Missing item type\ntab handler",
            "line": " src/Tabset.js:137"
        }
    ]
}